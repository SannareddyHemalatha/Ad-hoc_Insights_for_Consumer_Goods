𝟭. 𝗣𝗿𝗼𝘃𝗶𝗱𝗲 𝘁𝗵𝗲 𝗹𝗶𝘀𝘁 𝗼𝗳 𝗺𝗮𝗿𝗸𝗲𝘁𝘀 𝗶𝗻 𝘄𝗵𝗶𝗰𝗵 𝗰𝘂𝘀𝘁𝗼𝗺𝗲𝗿 "𝗔𝘁𝗹𝗶𝗾 𝗘𝘅𝗰𝗹𝘂𝘀𝗶𝘃𝗲" 𝗼𝗽𝗲𝗿𝗮𝘁𝗲𝘀 𝗶𝘁𝘀 𝗯𝘂𝘀𝗶𝗻𝗲𝘀𝘀 𝗶𝗻 𝘁𝗵𝗲 𝗔𝗣𝗔𝗖 𝗿𝗲𝗴𝗶𝗼𝗻.

SELECT market
FROM dim_customer
WHERE customer= 'Atliq Exclusive' AND region= 'APAC'
GROUP BY market;


𝟮. 𝗪𝗵𝗮𝘁 𝗶𝘀 𝘁𝗵𝗲 𝗽𝗲𝗿𝗰𝗲𝗻𝘁𝗮𝗴𝗲 𝗼𝗳 𝘂𝗻𝗶𝗾𝘂𝗲 𝗽𝗿𝗼𝗱𝘂𝗰𝘁 𝗶𝗻𝗰𝗿𝗲𝗮𝘀𝗲 𝗶𝗻 𝟮𝟬𝟮𝟭 𝘃𝘀. 𝟮𝟬𝟮𝟬?

SELECT
A.unq_20 AS unique_products_2020,
B.unq_21 AS unique_products_2021,
ROUND((B.unq_21-A.unq_20)*100/A.unq_20,2) as pct_change
FROM 
(
(SELECT COUNT(DISTINCT(product_code)) as unq_20
FROM fact_sales_monthly
WHERE fiscal_year = 2020) A,

(SELECT COUNT(DISTINCT(product_code)) as unq_21
FROM fact_sales_monthly
WHERE fiscal_year = 2021) B
);


𝟯. 𝗣𝗿𝗼𝘃𝗶𝗱𝗲 𝗮 𝗿𝗲𝗽𝗼𝗿𝘁 𝘄𝗶𝘁𝗵 𝗮𝗹𝗹 𝘁𝗵𝗲 𝘂𝗻𝗶𝗾𝘂𝗲 𝗽𝗿𝗼𝗱𝘂𝗰𝘁 𝗰𝗼𝘂𝗻𝘁𝘀 𝗳𝗼𝗿 𝗲𝗮𝗰𝗵 𝘀𝗲𝗴𝗺𝗲𝗻𝘁 𝗮𝗻𝗱 𝘀𝗼𝗿𝘁 𝘁𝗵𝗲𝗺 𝗶𝗻 𝗱𝗲𝘀𝗰𝗲𝗻𝗱𝗶𝗻𝗴 𝗼𝗿𝗱𝗲𝗿 𝗼𝗳 𝗽𝗿𝗼𝗱𝘂𝗰𝘁 𝗰𝗼𝘂𝗻𝘁𝘀.

SELECT
segment,
COUNT(product) as product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;


𝟰. 𝗙𝗼𝗹𝗹𝗼𝘄-𝘂𝗽: 𝗪𝗵𝗶𝗰𝗵 𝘀𝗲𝗴𝗺𝗲𝗻𝘁 𝗵𝗮𝗱 𝘁𝗵𝗲 𝗺𝗼𝘀𝘁 𝗶𝗻𝗰𝗿𝗲𝗮𝘀𝗲 𝗶𝗻 𝘂𝗻𝗶𝗾𝘂𝗲 𝗽𝗿𝗼𝗱𝘂𝗰𝘁𝘀 𝗶𝗻 𝟮𝟬𝟮𝟭 𝘃𝘀 𝟮𝟬𝟮𝟬?

WITH cte1 AS 
(SELECT
segment as s1,
COUNT(DISTINCT(s.product_code)) AS cnt1
FROM dim_product p, fact_sales_monthly s
WHERE p.product_code=s.product_code
GROUP BY p.segment, s.fiscal_year
HAVING s.fiscal_year='2020'),

cte2 AS
(SELECT
segment AS s2,
COUNT(DISTINCT(s.product_code)) AS cnt2
FROM dim_product p, fact_sales_monthly s
WHERE p.product_code=s.product_code
GROUP BY p.segment, s.fiscal_year
HAVING s.fiscal_year='2021')

SELECT
cte1.s1 AS segment,
cte1.cnt1 AS product_count_2020,
cte2.cnt2 AS product_count_2021,
(cte2.cnt2-cte1.cnt1) AS difference
FROM cte1, cte2
WHERE cte1.s1=cte2.s2;


𝟱. 𝗚𝗲𝘁 𝘁𝗵𝗲 𝗽𝗿𝗼𝗱𝘂𝗰𝘁𝘀 𝘁𝗵𝗮𝘁 𝗵𝗮𝘃𝗲 𝘁𝗵𝗲 𝗵𝗶𝗴𝗵𝗲𝘀𝘁 𝗮𝗻𝗱 𝗹𝗼𝘄𝗲𝘀𝘁 𝗺𝗮𝗻𝘂𝗳𝗮𝗰𝘁𝘂𝗿𝗶𝗻𝗴 𝗰𝗼𝘀𝘁𝘀.

(SELECT
m.product_code,
p.product,
m.manufacturing_cost
FROM fact_manufacturing_cost m, dim_product p
WHERE m.product_code=p.product_code
ORDER BY m.manufacturing_cost DESC
LIMIT 1) -- Highest cost product
UNION
(SELECT
m.product_code,
p.product,
m.manufacturing_cost
FROM fact_manufacturing_cost m, dim_product p
WHERE m.product_code=p.product_code
ORDER BY m.manufacturing_cost ASC
LIMIT 1) -- Lowest cost product;


𝟲. 𝗚𝗲𝗻𝗲𝗿𝗮𝘁𝗲 𝗮 𝗿𝗲𝗽𝗼𝗿𝘁 𝘄𝗵𝗶𝗰𝗵 𝗰𝗼𝗻𝘁𝗮𝗶𝗻𝘀 𝘁𝗵𝗲 𝘁𝗼𝗽 𝟱 𝗰𝘂𝘀𝘁𝗼𝗺𝗲𝗿𝘀 𝘄𝗵𝗼 𝗿𝗲𝗰𝗲𝗶𝘃𝗲𝗱 𝗮𝗻 𝗮𝘃𝗲𝗿𝗮𝗴𝗲 𝗵𝗶𝗴𝗵 𝗽𝗿𝗲_𝗶𝗻𝘃𝗼𝗶𝗰𝗲_𝗱𝗶𝘀𝗰𝗼𝘂𝗻𝘁_𝗽𝗰𝘁 𝗳𝗼𝗿 𝘁𝗵𝗲 𝗳𝗶𝘀𝗰𝗮𝗹 𝘆𝗲𝗮𝗿 𝟮𝟬𝟮𝟭 𝗮𝗻𝗱 𝗶𝗻 𝘁𝗵𝗲
𝗜𝗻𝗱𝗶𝗮𝗻 𝗺𝗮𝗿𝗸𝗲𝘁.

SELECT
pr.customer_code, c.customer,
pr.pre_invoice_discount_pct AS average_discount_percentage
FROM fact_pre_invoice_deductions pr
JOIN dim_customer c
USING (customer_code)
WHERE pre_invoice_discount_pct > (SELECT AVG(pre_invoice_discount_pct) FROM fact_pre_invoice_deductions)
AND c.market='India'
ORDER BY average_discount_percentage DESC
LIMIT 5;


𝟳. 𝗚𝗲𝘁 𝘁𝗵𝗲 𝗰𝗼𝗺𝗽𝗹𝗲𝘁𝗲 𝗿𝗲𝗽𝗼𝗿𝘁 𝗼𝗳 𝘁𝗵𝗲 𝗚𝗿𝗼𝘀𝘀 𝘀𝗮𝗹𝗲𝘀 𝗮𝗺𝗼𝘂𝗻𝘁 𝗳𝗼𝗿 𝘁𝗵𝗲 𝗰𝘂𝘀𝘁𝗼𝗺𝗲𝗿 “𝗔𝘁𝗹𝗶𝗾 𝗘𝘅𝗰𝗹𝘂𝘀𝗶𝘃𝗲” 𝗳𝗼𝗿 𝗲𝗮𝗰𝗵 𝗺𝗼𝗻𝘁𝗵 . 𝗧𝗵𝗶𝘀 𝗮𝗻𝗮𝗹𝘆𝘀𝗶𝘀 𝗵𝗲𝗹𝗽𝘀 𝘁𝗼 𝗴𝗲𝘁 𝗮𝗻 𝗶𝗱𝗲𝗮 𝗼𝗳 𝗹𝗼𝘄 𝗮𝗻𝗱
𝗵𝗶𝗴𝗵-𝗽𝗲𝗿𝗳𝗼𝗿𝗺𝗶𝗻𝗴 𝗺𝗼𝗻𝘁𝗵𝘀 𝗮𝗻𝗱 𝘁𝗮𝗸𝗲 𝘀𝘁𝗿𝗮𝘁𝗲𝗴𝗶𝗰 𝗱𝗲𝗰𝗶𝘀𝗶𝗼𝗻𝘀.

SELECT
CONCAT(MONTHNAME(s.date), ' (', YEAR(s.date), ')') AS month,
s.fiscal_year,
ROUND(SUM(s.sold_quantity*g.gross_price),2) as gross_sales_amount
FROM fact_sales_monthly s
JOIN fact_gross_price g
ON s.product_code=g.product_code
JOIN dim_customer c
ON s.customer_code=c.customer_code
WHERE c.customer='Atliq Exclusive'
GROUP BY month, s.fiscal_year
ORDER BY s.fiscal_year;


𝟴. 𝗜𝗻 𝘄𝗵𝗶𝗰𝗵 𝗾𝘂𝗮𝗿𝘁𝗲𝗿 𝗼𝗳 𝟮𝟬𝟮𝟬, 𝗴𝗼𝘁 𝘁𝗵𝗲 𝗺𝗮𝘅𝗶𝗺𝘂𝗺 𝘁𝗼𝘁𝗮𝗹_𝘀𝗼𝗹𝗱_𝗾𝘂𝗮𝗻𝘁𝗶𝘁𝘆?

SELECT
CASE
WHEN date BETWEEN '2019-09-01' AND '2019-11-01' THEN 'Q1'
WHEN date BETWEEN '2019-12-01' AND '2020-02-01' THEN 'Q2'
WHEN date BETWEEN '2020-03-01' AND '2020-05-01' THEN 'Q3'
WHEN date BETWEEN '2020-06-01' AND '2020-08-01' THEN 'Q4'
END AS quarters,
ROUND(SUM(sold_quantity)/1000000,2) AS total_sold_quantity_in_mln
FROM fact_sales_monthly
WHERE fiscal_year=2020
GROUP BY quarters
ORDER BY total_sold_quantity_in_mln DESC;


𝟵. 𝗪𝗵𝗶𝗰𝗵 𝗰𝗵𝗮𝗻𝗻𝗲𝗹 𝗵𝗲𝗹𝗽𝗲𝗱 𝘁𝗼 𝗯𝗿𝗶𝗻𝗴 𝗺𝗼𝗿𝗲 𝗴𝗿𝗼𝘀𝘀 𝘀𝗮𝗹𝗲𝘀 𝗶𝗻 𝘁𝗵𝗲 𝗳𝗶𝘀𝗰𝗮𝗹 𝘆𝗲𝗮𝗿 𝟮𝟬𝟮𝟭 𝗮𝗻𝗱 𝘁𝗵𝗲 𝗽𝗲𝗿𝗰𝗲𝗻𝘁𝗮𝗴𝗲 𝗼𝗳 𝗰𝗼𝗻𝘁𝗿𝗶𝗯𝘂𝘁𝗶𝗼𝗻?

WITH cte1 AS (
SELECT c.channel, SUM(s.sold_quantity*g.gross_price) AS total_sales
FROM fact_sales_monthly s
JOIN dim_customer c ON s.customer_code=c.customer_code
JOIN fact_gross_price g ON s.product_code=g.product_code
WHERE s.fiscal_year=2021
GROUP BY c.channel
ORDER BY total_sales DESC)

SELECT channel, ROUND(total_sales/1000000,2) AS gross_sales_in_mln,
ROUND(total_sales/(SUM(total_sales) OVER())*100,2) AS percentage
FROM cte1;


𝟭𝟬. 𝗚𝗲𝘁 𝘁𝗵𝗲 𝗧𝗼𝗽 𝟯 𝗽𝗿𝗼𝗱𝘂𝗰𝘁𝘀 𝗶𝗻 𝗲𝗮𝗰𝗵 𝗱𝗶𝘃𝗶𝘀𝗶𝗼𝗻 𝘁𝗵𝗮𝘁 𝗵𝗮𝘃𝗲 𝗮 𝗵𝗶𝗴𝗵 𝘁𝗼𝘁𝗮𝗹_𝘀𝗼𝗹𝗱_𝗾𝘂𝗮𝗻𝘁𝗶𝘁𝘆 𝗶𝗻 𝘁𝗵𝗲 𝗳𝗶𝘀𝗰𝗮𝗹_𝘆𝗲𝗮𝗿 𝟮𝟬𝟮𝟭?

WITH cte1 AS (
SELECT
p.division, s.product_code, p.product,
SUM(s.sold_quantity) as total_sold_quantity
FROM fact_sales_monthly s
JOIN dim_product P ON s.product_code=p.product_code
WHERE s.fiscal_year = 2021 
GROUP BY s.product_code, division, P.product),

cte2 AS (
SELECT division, product_code, product, total_sold_quantity,
RANK() OVER(PARTITION BY division ORDER BY total_sold_quantity DESC) AS 'rank_order'
FROM cte1)

SELECT cte1.division, cte1.product_code, cte1.product, cte2.total_sold_quantity, cte2.rank_order
FROM cte1 JOIN cte2 ON cte1.product_code=cte2.product_code
WHERE cte2.rank_order IN (1,2,3);
